<?xml version="1.0" ?>
<robot name="amr" xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:include filename="inertials.xacro"/>

  <material name="white">
    <color rgba="1 1 1 1"/>
  </material>

  <material name="orange">
    <color rgba="1 0.3 0.1 1"/>
  </material>

  <material name="blue">
    <color rgba="0.2 0.2 1 1"/>
  </material>

  <material name="black">
    <color rgba="0 0 0 1"/>
  </material>

  <!--Base Link-->

  <link name="base_link">

  </link>
  
  <joint name="chassis_joint" type="fixed">
    <parent link="base_link"/>
    <child link="chassis"/>
    <origin xyz="0 0 0.025"/>
  </joint>

  <!--Chassis Link-->
  <link name="chassis">
    <visual>
      <origin xyz="0 0 0.025"/>
      <geometry>
        <box size="0.2 0.15 0.1"/>
      </geometry>
      <material name="white"/>
    </visual>
    <collision>
      <origin xyz="0 0 0.025"/>
      <geometry>
        <box size="0.2 0.15 0.1"/>
      </geometry>
    </collision>
    <xacro:inertial_box mass="1" x="0.2" y="0.15" z="0.1">
      <origin xyz="0 0 0"/>
    </xacro:inertial_box>
  </link>

  <gazebo reference="chassis">
    <material>Gazebo/Wood</material>
  </gazebo>

  <!--Left Wheel Link-->
  <joint name="front_left_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="front_left_wheel"/>
    <origin xyz="0.05 0.08 0" rpy="-1.57079632679 0 0"/>
    <axis xyz="0 0 1"/>
  </joint>

  <link name="front_left_wheel">
    <visual>
      <geometry>
        <cylinder radius="0.02" length="0.01"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <collision>
      <geometry>
        <cylinder radius="0.02" length="0.01"/>
      </geometry>
    </collision>
    <xacro:inertial_cylinder mass="0.1" radius="0.02" length="0.01">
      <origin xyz="0.05 0.08 0" rpy="-1.57079632679 0 0"/>
    </xacro:inertial_cylinder>
  </link>

  <gazebo reference="front_left_wheel">
    <material>Gazebo/Blue</material>
  </gazebo>

  <joint name="back_left_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="back_left_wheel"/>
    <origin xyz="-0.05 0.080 0" rpy="-1.57079632679 0 0"/>
    <axis xyz="0 0 1"/>
  </joint>

  <link name="back_left_wheel">
    <visual>
      <geometry>
        <cylinder radius="0.02" length="0.01"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <collision>
      <geometry>
        <cylinder radius="0.02" length="0.01"/>
      </geometry>
    </collision>
    <xacro:inertial_cylinder mass="0.1" radius="0.02" length="0.01">
      <origin xyz="-0.05 0.080 0" rpy="-1.57079632679 0 0"/>
    </xacro:inertial_cylinder>
  </link>

  <gazebo reference="back_left_wheel">
    <material>Gazebo/Blue</material>
  </gazebo>

  <!--Right Wheel Link-->
  <joint name="front_right_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="front_right_wheel"/>
    <origin xyz="0.05 -0.080 0" rpy="1.57079632679 0 0"/>
    <axis xyz="0 0 -1"/>
  </joint>

  <link name="front_right_wheel">
    <visual>
      <geometry>
        <cylinder radius="0.02" length="0.01"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <collision>
      <geometry>
        <cylinder radius="0.02" length="0.01"/>
      </geometry>
    </collision>
    <xacro:inertial_cylinder mass="0.1" radius="0.02" length="0.01">
      <origin xyz="0.05 -0.080 0" rpy="1.57079632679 0 0"/>
    </xacro:inertial_cylinder>
  </link>

  <gazebo reference="front_right_wheel">
    <material>Gazebo/Blue</material>
  </gazebo>

  <joint name="back_right_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="back_right_wheel"/>
    <origin xyz="-0.05 -0.080 0" rpy="1.57079632679 0 0"/>
    <axis xyz="0 0 -1"/>
  </joint>

  <link name="back_right_wheel">
    <visual>
      <geometry>
        <cylinder radius="0.02" length="0.01"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <collision>
      <geometry>
        <cylinder radius="0.02" length="0.01"/>
      </geometry>
    </collision>
    <xacro:inertial_cylinder mass="0.1" radius="0.02" length="0.01">
      <origin xyz="-0.05 -0.080 0" rpy="1.57079632679 0 0"/>
    </xacro:inertial_cylinder>
  </link>

  <gazebo reference="back_right_wheel">
    <material>Gazebo/Blue</material>
  </gazebo>

<!--LIDAR Link-->
  <joint name="laser_joint" type="fixed">
    <parent link="chassis"/>
    <child link="laser_frame"/>
    <origin xyz="0 0 0.08" rpy="0 0 0"/>
  </joint>

  <link name="laser_frame">
    <visual>
      <geometry>
        <cylinder radius="0.025" length="0.02"/>
      </geometry>
      <material name="red"/>
    </visual>
    <collision>
      <geometry>
        <cylinder radius="0.025" length="0.02"/>
      </geometry>
    </collision>
    <xacro:inertial_cylinder mass="0.1" length="0.02" radius="0.025">
      <origin xyz="0 0 0" rpy="0 0 0"/>
    </xacro:inertial_cylinder>
  </link>

  <gazebo reference="laser_frame">
    <material>Gazebo/Red</material>

    <sensor name="laser" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>100</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>10</samples>
            <min_angle>-1.57</min_angle>
            <max_angle>1.57</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.3</min>
          <max>1.5</max>
        </range>
      </ray>
      <plugin name="laser_controller" filename="libgazebo_ros_ray_sensor.so">
        <ros>
          <argument>~/out:=scan</argument>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <frame_name>laser_frame</frame_name>
      </plugin>
    </sensor>
  </gazebo>

<!--Camera Link-->
  <joint name="camera_joint" type="fixed">
    <parent link="chassis"/>
    <child link="camera_link"/>
    <origin xyz="0.1 0 0.08" rpy="0 0 0"/>
  </joint>

  <link name="camera_link">
    <visual>
      <geometry>
        <box size="0.01 0.03 0.03"/> 
      </geometry>
      <material name="red"/>
    </visual>
  </link>

  <joint name="camera_optical_joint" type="fixed">
    <parent link="camera_link"/>
    <child link="camera_link_optical"/>
    <origin xyz="0 0 0" rpy="-1.57079632679 0 -1.57079632679"/>
  </joint>

  <link name="camera_link_optical">
  </link>

  <gazebo reference="camera_link">
    <material>Gazebo/Red</material>

    <sensor name="camera" type="camera">
            <pose> 0 0 0 0 0 0 </pose>
            <visualize>true</visualize>
            <update_rate>10</update_rate>
            <camera>
                <horizontal_fov>1.089</horizontal_fov>
                <image>
                    <format>R8G8B8</format>
                    <width>640</width>
                    <height>480</height>
                </image>
                <clip>
                    <near>0.05</near>
                    <far>8.0</far>
                </clip>
            </camera>
            <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
                <frame_name>camera_link_optical</frame_name>
            </plugin>
        </sensor>
  </gazebo>

<!--IMU Link-->
<joint name="imu_joint" type="fixed">
  <parent link="base_link"/>
  <child link="imu_link"/>
  <origin xyz="0 0 0.05" rpy="0 0 0"/>
</joint>

<link name="imu_link">
  <visual>
    <geometry>
      <box size="0.01 0.01 0.01"/>
    </geometry>
    <material name="orange"/>
  </visual>
  <collision>
    <geometry>
      <box size="0.01 0.01 0.01"/>
    </geometry>
  </collision>
  <xacro:inertial_box mass="0.01" x="0.01" y="0.01" z="0.01">
    <origin xyz="0 0 0.05"/>
  </xacro:inertial_box>
</link>

<gazebo reference="imu_link">
  <material>Gazebo/Orange</material>
  <sensor name="imu_sensor" type="imu">
   <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
      <ros>
        <namespace>/demo</namespace>
        <remapping>~/out:=imu</remapping>
      </ros>
      <initial_orientation_as_reference>false</initial_orientation_as_reference>
    </plugin>
    <always_on>true</always_on>
    <update_rate>100</update_rate>
    <visualize>true</visualize>
    <imu>
      <angular_velocity>
        <x>
          <noise type="gaussian">
            <mean>0.0</mean>
            <stddev>2e-4</stddev>
            <bias_mean>0.0000075</bias_mean>
            <bias_stddev>0.0000008</bias_stddev>
          </noise>
        </x>
        <y>
          <noise type="gaussian">
            <mean>0.0</mean>
            <stddev>2e-4</stddev>
            <bias_mean>0.0000075</bias_mean>
            <bias_stddev>0.0000008</bias_stddev>
          </noise>
        </y>
        <z>
          <noise type="gaussian">
            <mean>0.0</mean>
            <stddev>2e-4</stddev>
            <bias_mean>0.0000075</bias_mean>
            <bias_stddev>0.0000008</bias_stddev>
          </noise>
        </z>
      </angular_velocity>
      <linear_acceleration>
        <x>
          <noise type="gaussian">
            <mean>0.0</mean>
            <stddev>1.7e-2</stddev>
            <bias_mean>0.1</bias_mean>
            <bias_stddev>0.001</bias_stddev>
          </noise>
        </x>
        <y>
          <noise type="gaussian">
            <mean>0.0</mean>
            <stddev>1.7e-2</stddev>
            <bias_mean>0.1</bias_mean>
            <bias_stddev>0.001</bias_stddev>
          </noise>
        </y>
        <z>
          <noise type="gaussian">
            <mean>0.0</mean>
            <stddev>1.7e-2</stddev>
            <bias_mean>0.1</bias_mean>
            <bias_stddev>0.001</bias_stddev>
          </noise>
        </z>
      </linear_acceleration>
    </imu>
  </sensor>
</gazebo>

<!--Drive Controller-->
  <gazebo>
    <plugin name="four_wheel_drive_controller" filename="libgazebo_ros_diff_drive.so">
      <updateRate>2.0</updateRate>
      <robotNamespace>chassis</robotNamespace>
      <!-- Front Wheels-->
      <left_joint>front_left_wheel_joint</left_joint>
      <right_joint>front_right_wheel_joint</right_joint>
      
      <!--Kinematics-->
      <wheel_separation>0.152</wheel_separation>
      <wheel_diameter>0.04</wheel_diameter> 
      
      <!--Limits-->
      <max_wheel_torque>200</max_wheel_torque>
      <max_wheel_acceleration>10.0</max_wheel_acceleration>
      <command_topic>cmd_vel</command_topic>

      <!--Output-->
      <robot_base_frame>base_link</robot_base_frame>
      <odometry_frame>odom</odometry_frame>

      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <publish_wheel_tf>true</publish_wheel_tf>

    </plugin>
  </gazebo>

  <gazebo>
    <plugin name="four_wheel_drive_controller" filename="libgazebo_ros_diff_drive.so">
      <updateRate>2.0</updateRate>
      <robotNamespace>chassis</robotNamespace>
      <!-- Back Wheels-->
      <left_joint>back_left_wheel_joint</left_joint>
      <right_joint>back_right_wheel_joint</right_joint>
      
      <!--Kinematics-->
      <wheel_separation>0.152</wheel_separation>
      <wheel_diameter>0.04</wheel_diameter> 
      
      <!--Limits-->
      <max_wheel_torque>200</max_wheel_torque>
      <max_wheel_acceleration>10.0</max_wheel_acceleration>
      <command_topic>cmd_vel</command_topic>

      <!--Output-->
      <robot_base_frame>base_link</robot_base_frame>
      <odometry_frame>odom</odometry_frame>

      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <publish_wheel_tf>true</publish_wheel_tf>

    </plugin>
  </gazebo>

</robot>
